{"ast":null,"code":"var _jsxFileName = \"/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/pages/TweetsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetsPage = ({\n  setTweets\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchTweets = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(\"http://localhost:5001/tweets\");\n      console.log(\"üì° API Response:\", response.data);\n      if (response.data && response.data.data.length > 0) {\n        setTweets(response.data.data); // Store tweets globally\n      } else {\n        throw new Error(\"No tweets found.\");\n      }\n    } catch (error) {\n      console.error(\"‚ùå Error fetching tweets:\", error);\n      setError(\"Failed to load tweets. Please try again later.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweets-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent AI Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTweets,\n      className: \"refresh-button\",\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Fetch AI Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(TweetsPage, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\n_c = TweetsPage;\nexport default TweetsPage;\nvar _c;\n$RefreshReg$(_c, \"TweetsPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TweetsPage","setTweets","_s","loading","setLoading","error","setError","fetchTweets","response","get","console","log","data","length","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/pages/TweetsPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst TweetsPage = ({ setTweets }) => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchTweets = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await axios.get(\"http://localhost:5001/tweets\");\n            console.log(\"üì° API Response:\", response.data);\n\n            if (response.data && response.data.data.length > 0) {\n                setTweets(response.data.data); // Store tweets globally\n            } else {\n                throw new Error(\"No tweets found.\");\n            }\n        } catch (error) {\n            console.error(\"‚ùå Error fetching tweets:\", error);\n            setError(\"Failed to load tweets. Please try again later.\");\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div className=\"tweets-page\">\n            <h2>Recent AI Tweets</h2>\n            <button onClick={fetchTweets} className=\"refresh-button\" disabled={loading}>\n                {loading ? \"Loading...\" : \"Fetch AI Tweets\"}\n            </button>\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default TweetsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,8BAA8B,CAAC;MAChEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE9C,IAAIJ,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAChDZ,SAAS,CAACO,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACH,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;MACvC;IACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZK,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,gDAAgD,CAAC;IAC9D;IAEAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIL,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAQsB,OAAO,EAAEd,WAAY;MAACQ,SAAS,EAAC,gBAAgB;MAACO,QAAQ,EAAEnB,OAAQ;MAAAa,QAAA,EACtEb,OAAO,GAAG,YAAY,GAAG;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACRf,KAAK,iBAAIN,OAAA;MAAGwB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAClB,EAAA,CAlCIF,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}