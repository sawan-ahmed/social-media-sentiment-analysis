{"ast":null,"code":"var _jsxFileName = \"/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/SentimentResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentResults = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchTweets = async () => {\n    if (loading) return; // Prevent multiple rapid requests\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(\"http://localhost:5001/tweets\");\n      if (response.data.data) {\n        setTweets(response.data.data);\n      } else {\n        throw new Error(\"No tweets found\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching tweets:\", error);\n      setError(\"Twitter API rate limit exceeded. Please wait a few minutes and try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Tweets on Cloud Computing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTweets,\n      className: \"refresh-button\",\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Fetch Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tweets.length > 0 ? tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          borderBottom: \"1px solid #ddd\",\n          padding: \"10px\"\n        },\n        children: [tweet.formatted_tweet, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 53\n        }, this), \"\\u2764\\uFE0F \", tweet.likes, \" | \\uD83D\\uDD04 \", tweet.retweets]\n      }, tweet.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tweets found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(SentimentResults, \"kT6QMu/I7CCJ2UCDB67FuNPY74M=\");\n_c = SentimentResults;\nexport default SentimentResults;\nvar _c;\n$RefreshReg$(_c, \"SentimentResults\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SentimentResults","_s","tweets","setTweets","loading","setLoading","error","setError","fetchTweets","response","get","data","Error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","length","map","tweet","borderBottom","padding","formatted_tweet","likes","retweets","id","_c","$RefreshReg$"],"sources":["/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/SentimentResults.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst SentimentResults = () => {\n    const [tweets, setTweets] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchTweets = async () => {\n        if (loading) return; // Prevent multiple rapid requests\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await axios.get(\"http://localhost:5001/tweets\");\n            if (response.data.data) {\n                setTweets(response.data.data);\n            } else {\n                throw new Error(\"No tweets found\");\n            }\n        } catch (error) {\n            console.error(\"Error fetching tweets:\", error);\n            setError(\"Twitter API rate limit exceeded. Please wait a few minutes and try again.\");\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div className=\"sentiment-results\">\n            <h2>Recent Tweets on Cloud Computing</h2>\n            <button onClick={fetchTweets} className=\"refresh-button\" disabled={loading}>\n                {loading ? \"Loading...\" : \"Fetch Tweets\"}\n            </button>\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n            <ul>\n                {tweets.length > 0 ? (\n                    tweets.map((tweet) => (\n                        <li key={tweet.id} style={{ borderBottom: \"1px solid #ddd\", padding: \"10px\" }}>\n                            {tweet.formatted_tweet} <br />\n                            ‚ù§Ô∏è {tweet.likes} | üîÑ {tweet.retweets}\n                        </li>\n                    ))\n                ) : (\n                    <p>No tweets found.</p>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default SentimentResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}