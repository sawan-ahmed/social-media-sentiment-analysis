{"ast":null,"code":"var _jsxFileName = \"/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/SentimentResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentimentResults = () => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5001/tweets\");\n      setTweets(response.data.tweets);\n      setLoading(false);\n    } catch (error) {\n      console.error(\"Error fetching tweets:\", error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentiment-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Tweets on Cloud Computing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTweets,\n      className: \"refresh-button\",\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tweets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tweet\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(SentimentResults, \"D8ST2hGgi+DVLDh5r79cIR44s88=\");\n_c = SentimentResults;\nexport default SentimentResults;\nvar _c;\n$RefreshReg$(_c, \"SentimentResults\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SentimentResults","_s","tweets","setTweets","loading","setLoading","fetchTweets","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","tweet","index","_c","$RefreshReg$"],"sources":["/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/SentimentResults.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst SentimentResults = () => {\n    const [tweets, setTweets] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchTweets();\n    }, []);\n\n    const fetchTweets = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:5001/tweets\");\n            setTweets(response.data.tweets);\n            setLoading(false);\n        } catch (error) {\n            console.error(\"Error fetching tweets:\", error);\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"sentiment-results\">\n            <h2>Recent Tweets on Cloud Computing</h2>\n            <button onClick={fetchTweets} className=\"refresh-button\">Refresh</button>\n            {loading ? <p>Loading tweets...</p> : (\n                <ul>\n                    {tweets.map((tweet, index) => (\n                        <li key={index}>{tweet}</li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default SentimentResults;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZW,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8BAA8B,CAAC;MAChEL,SAAS,CAACI,QAAQ,CAACE,IAAI,CAACP,MAAM,CAAC;MAC/BG,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CL,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzClB,OAAA;MAAQmB,OAAO,EAAEZ,WAAY;MAACM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxEb,OAAO,gBAAGL,OAAA;MAAAc,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAC/BlB,OAAA;MAAAc,QAAA,EACKX,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrBtB,OAAA;QAAAc,QAAA,EAAiBO;MAAK,GAAbC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChB,EAAA,CAhCID,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}