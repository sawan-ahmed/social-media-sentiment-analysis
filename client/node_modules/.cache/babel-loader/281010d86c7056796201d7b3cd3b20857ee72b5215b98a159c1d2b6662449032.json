{"ast":null,"code":"var _jsxFileName = \"/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/Tweets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = ({\n  setTweets\n}) => {\n  _s();\n  const [tweets, setLocalTweets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchTweets();\n  }, []);\n  const fetchTweets = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(\"http://localhost:5001/tweets\");\n      console.log(\"üì° API Response:\", response.data);\n      if (response.data && response.data.data.length > 0) {\n        setTweets(response.data.data); // Save to global state\n        setLocalTweets(response.data.data); // Save to local state\n      } else {\n        throw new Error(\"No tweets found.\");\n      }\n    } catch (error) {\n      console.error(\"‚ùå Error fetching tweets:\", error);\n      setError(\"Failed to load tweets. Please try again later.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweets-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTweets,\n      className: \"refresh-button\",\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Fetch AI Tweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Tweets, \"MSvTCaoKU/On3OM6iiwZEJVgIBU=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Tweets","setTweets","_s","tweets","setLocalTweets","loading","setLoading","error","setError","fetchTweets","response","get","console","log","data","length","Error","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/Users/sawanahmed/Documents/cloud computing/final-project/social-media-sentiment-analysis/client/src/components/Tweets.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Tweets = ({ setTweets }) => {\n    const [tweets, setLocalTweets] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchTweets();\n    }, []);\n\n    const fetchTweets = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await axios.get(\"http://localhost:5001/tweets\");\n            console.log(\"üì° API Response:\", response.data);\n\n            if (response.data && response.data.data.length > 0) {\n                setTweets(response.data.data); // Save to global state\n                setLocalTweets(response.data.data); // Save to local state\n            } else {\n                throw new Error(\"No tweets found.\");\n            }\n        } catch (error) {\n            console.error(\"‚ùå Error fetching tweets:\", error);\n            setError(\"Failed to load tweets. Please try again later.\");\n        }\n\n        setLoading(false);\n    };\n\n    return (\n        <div className=\"tweets-container\">\n            <button onClick={fetchTweets} className=\"refresh-button\" disabled={loading}>\n                {loading ? \"Loading...\" : \"Fetch AI Tweets\"}\n            </button>\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n    );\n};\n\nexport default Tweets;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZa,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,8BAA8B,CAAC;MAChEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAE9C,IAAIJ,QAAQ,CAACI,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAChDd,SAAS,CAACS,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QAC/BV,cAAc,CAACM,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MACxC,CAAC,MAAM;QACH,MAAM,IAAIE,KAAK,CAAC,kBAAkB,CAAC;MACvC;IACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZK,OAAO,CAACL,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,gDAAgD,CAAC;IAC9D;IAEAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIP,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAQoB,OAAO,EAAEV,WAAY;MAACQ,SAAS,EAAC,gBAAgB;MAACG,QAAQ,EAAEf,OAAQ;MAAAa,QAAA,EACtEb,OAAO,GAAG,YAAY,GAAG;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EACRjB,KAAK,iBAAIR,OAAA;MAAG0B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAEX;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAACtB,EAAA,CAvCIF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}